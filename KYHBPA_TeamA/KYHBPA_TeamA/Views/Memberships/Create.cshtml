@model KYHBPA_TeamA.Models.Membership

@{
    ViewBag.Title = "Create";
}

<h2>Kentucky HBPA Membership</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="common-Uppercase">
        <h4>
        I AM A MEMBER OF THE KENTUCKY HORSEMEN'S BENEVOLENT AND PROTECTIVE ASSOCIATION.
        I UNDERSTAND THAT I AM ENTITLED TO ALL BENEFITS ESTABLISHED BY THE HBPA FOR ITS MEMBERS.                        
        I hereby appoint the Kentucky Horsemen's Benevolent and Protective Association, Inc. to act as my
        sole and exclusive agent and representative for the purpose of negotiating and executing,
        or refusing to execute, with Thoroughbred race tracks in Kentucky any and all contracts and 
        agreements relating to Thoroughbred racing in the state. By this appointment, I hereby revoke
        any and all previous authorities given by me for similar purposes.
        </h4> </div>

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class= "control-label col-md-2">Date Of Birth </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2">Phone Number </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Zip Code </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">License Number </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LicenseNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LicenseNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Are you an owner? </label>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsOwner)
                        @Html.ValidationMessageFor(model => model.IsOwner, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Are you a trainer? </label>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsTrainer)
                        @Html.ValidationMessageFor(model => model.IsTrainer, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Affiliation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Affiliation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Affiliation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Managing Partner</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManagingPartner, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManagingPartner, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                <label class="control-label col-md-2">I agree to the terms outlined above </label>
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AgreedToTerms)
                        @Html.ValidationMessageFor(model => model.AgreedToTerms, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Signature, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Signature, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Signature, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
